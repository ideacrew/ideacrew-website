---
import { SITE } from "@/config";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Tag from "@/components/Tag.astro";
import Datetime from "@/components/Datetime";
import type { CollectionEntry } from "astro:content";
import ShareLinks from "@/components/ShareLinks.astro";
import LinkButton from "@/components/LinkButton.astro";
import { ArrowLeft } from "@lucide/astro";

export interface Props {
  post: CollectionEntry<"news">;
}

const { post } = Astro.props;

const {
  title,
  author,
  description,
  ogImage,
  canonicalURL,
  pubDatetime,
  tags,
  modDatetime,
} = post.data;

const { Content } = await post.render();

const ogImageUrl = typeof ogImage === "string" ? ogImage : SITE.ogImage;
---

<Layout
  title={title}
  author={author}
  description={description}
  ogImage={ogImageUrl}
  canonicalURL={canonicalURL}
>
  <Header activeNav="news" />
  <div
    class="mx-auto mt-[calc(var(--header-height)+6rem)] mb-4 flex w-full max-w-3xl justify-start px-2"
  >
    <LinkButton href="/news" variant="link"
      ><ArrowLeft /> Back to News</LinkButton
    >
  </div>
  <main id="main-content" class="mx-auto w-full max-w-3xl px-4 pb-12">
    <h1 class="font-domine text-4xl leading-[150%] font-normal text-blue-300">
      {title}
    </h1>

    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>

    <ul class="my-8 flex flex-wrap gap-2">
      {tags.map(tag => <Tag tag={tag} />)}
    </ul>

    {
      modDatetime && (
        <div>
          <Datetime
            pubDatetime={pubDatetime}
            modDatetime={modDatetime}
            size="sm"
            className="italic text-right mb-8"
          />
        </div>
      )
    }

    <LinkButton href="/news"> Back to News </LinkButton>

    <div class="flex justify-end">
      <ShareLinks />
    </div>
  </main>
  <Footer />
</Layout>
