---
import { Image } from "astro:assets";
import logoWhite from "/src/assets/images/logo.svg";
import { Menu, X } from "lucide-react";

import { getEntry } from "astro:content";
const siteConfig = await getEntry("site", "config");
const SITE = siteConfig!.data;

export interface Props {
  activeNav?: "home" | "about" | "sbm" | "clients" | "contact" | "news";
}

const { activeNav } = Astro.props;
const currentPath = Astro.url.pathname;
const isAboutPage = currentPath.startsWith("/about");
const isPhilanthropyPage = currentPath.startsWith("/philanthropy");
const isCareersPage = currentPath.startsWith("/careers");
const isNewsPage = currentPath.startsWith("/news");
const isInAboutSection =
  isAboutPage || isPhilanthropyPage || isCareersPage || isNewsPage;
---

<header
  class="fixed top-0 right-0 left-0 z-50 h-auto min-h-20 bg-white/90 backdrop-blur-md sm:h-[100px]"
>
  <a
    id="skip-to-content"
    href="#main-content"
    class="bg-skin-accent text-skin-inverted absolute -top-full left-16 z-50 px-3 py-2 transition-all focus:top-4"
  >
    Skip to content
  </a>
  <div class="mx-auto h-full max-w-[960px]">
    <div class="flex h-full flex-col sm:flex-row sm:items-end sm:justify-end">
      <div
        class="relative flex w-full flex-col p-4 sm:flex-row sm:items-center sm:pt-0 sm:pb-1"
      >
        <div class="flex w-full items-center justify-between">
          <a
            href="/"
            class="py-1 text-xl font-semibold whitespace-nowrap sm:text-2xl"
          >
            <Image
              src={logoWhite}
              alt={SITE.siteName}
              width={133.64}
              height={25.05}
              loading="eager"
            />
          </a>
          <button
            class="hamburger-menu focus-outline p-2 sm:hidden"
            aria-label="Open Menu"
            aria-expanded="false"
            aria-controls="menu-items"
          >
            <Menu
              client:load
              className="menu-icon h-6 w-6 scale-125"
              strokeWidth={1.5}
            />
            <X
              client:load
              className="close-icon hidden h-6 w-6 scale-125"
              strokeWidth={1.5}
            />
          </button>
        </div>
        <nav
          class="mobile-nav fixed inset-0 top-[80px] -z-10 h-[calc(100vh-80px)] transform bg-white opacity-0 transition-[clip-path,opacity] duration-500 ease-in-out sm:relative sm:top-0 sm:z-auto sm:mt-4 sm:flex sm:h-auto sm:w-full sm:transform-none sm:flex-row sm:items-center sm:justify-end sm:bg-transparent sm:opacity-100"
        >
          <ul
            id="menu-items"
            class="flex h-full w-full flex-col items-center justify-center space-y-8 text-center text-2xl opacity-0 transition-opacity delay-100 duration-300 sm:mt-0 sm:ml-0 sm:h-auto sm:w-auto sm:flex-row sm:items-center sm:justify-end sm:space-y-0 sm:space-x-5 sm:text-left sm:text-base sm:opacity-100"
          >
            <li class="w-full text-center sm:hidden">
              <a
                href="/"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent ${activeNav === "home" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                Home
              </a>
            </li>
            <li class="relative w-full text-center sm:w-auto">
              <!-- Mobile: About toggle with secondary menu -->
              <button
                class={`about-toggle inline-flex w-full items-center justify-center gap-1 px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:hidden ${activeNav === "about" || isInAboutSection ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
                aria-expanded={`${isInAboutSection ? "true" : "false"}`}
                aria-controls="about-submenu-mobile"
                aria-haspopup="menu"
                aria-label="About menu"
              >
                About
                <svg
                  class="about-chevron h-3 w-3 text-gray-500 transition-transform duration-150"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  aria-hidden="true"
                  focusable="false"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.25a.75.75 0 01-1.06 0L5.25 8.29a.75.75 0 01-.02-1.08z"
                    clip-rule="evenodd"></path>
                </svg>
              </button>
              <ul
                id="about-submenu-mobile"
                class={`about-submenu-mobile mx-auto mt-2 ${isInAboutSection ? "flex" : "hidden"} w-80 max-w-[90%] flex-col space-y-2 overflow-hidden rounded-lg border border-gray-300 bg-gray-50/80 p-3 text-center text-base shadow-sm sm:hidden`}
              >
                <li>
                  <a
                    href="/philanthropy"
                    class={`block rounded px-4 py-3 hover:bg-white/70 ${isPhilanthropyPage ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
                    >Philanthropy</a
                  >
                </li>
                <li>
                  <a
                    href="/careers"
                    class={`block rounded px-4 py-3 hover:bg-white/70 ${isCareersPage ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
                    >Careers</a
                  >
                </li>
                <li>
                  <a
                    href="/news"
                    class={`block rounded px-4 py-3 hover:bg-white/70 ${isNewsPage ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
                    >News</a
                  >
                </li>
              </ul>

              <!-- Desktop: About with hover dropdown -->
              <a
                href="/about"
                class={`about-desktop-link group hidden px-2 py-1 font-medium transition-colors hover:text-skin-accent sm:inline-flex sm:items-center ${activeNav === "about" || isInAboutSection ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                About
                <svg
                  aria-hidden="true"
                  focusable="false"
                  class="about-desktop-chevron ml-1 h-3 w-3 text-gray-500 transition-transform duration-150 group-hover:rotate-180"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.25a.75.75 0 01-1.06 0L5.25 8.29a.75.75 0 01-.02-1.08z"
                    clip-rule="evenodd"></path>
                </svg>
              </a>
              <div
                class="about-desktop-dropdown pointer-events-none absolute left-1/2 z-50 mt-2 hidden w-44 -translate-x-1/2 rounded-md border border-gray-200 bg-white/95 p-2 text-left opacity-0 shadow-lg backdrop-blur-md transition-opacity duration-150 ease-out sm:block"
              >
                <ul class="space-y-1 text-sm">
                  <li>
                    <a
                      href="/about"
                      class="block rounded px-2 py-1 hover:bg-gray-100">About</a
                    >
                  </li>
                  <li>
                    <a
                      href="/philanthropy"
                      class="block rounded px-2 py-1 hover:bg-gray-100"
                      >Philanthropy</a
                    >
                  </li>
                  <li>
                    <a
                      href="/careers"
                      class="block rounded px-2 py-1 hover:bg-gray-100"
                      >Careers</a
                    >
                  </li>
                  <li>
                    <a
                      href="/news"
                      class="block rounded px-2 py-1 hover:bg-gray-100">News</a
                    >
                  </li>
                </ul>
              </div>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/sbm"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "sbm" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                SBM
              </a>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/clients"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "clients" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                Client Projects
              </a>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/contact"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "contact" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                Contact
              </a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>
</header>

<style>
  .hamburger-menu.is-active .menu-icon {
    display: none;
  }
  .hamburger-menu.is-active .close-icon {
    display: block;
  }

  /* Menu animations and transitions */
  .mobile-nav {
    clip-path: circle(0% at calc(100% - 2rem) 2rem);
    pointer-events: none;
  }

  .mobile-nav.is-active {
    clip-path: circle(170% at calc(100% - 2rem) 2rem);
    opacity: 1;
    pointer-events: all;
    z-index: 40;
  }

  .mobile-nav.is-active #menu-items {
    opacity: 1;
  }

  /* Menu icon transition */
  .menu-icon,
  .close-icon {
    transition: all 0.2s ease-in-out;
  }

  @media (min-width: 640px) {
    .mobile-nav {
      clip-path: none;
      pointer-events: all;
    }
  }

  /* Desktop About dropdown visibility on parent hover */
  @media (min-width: 640px) {
    li:hover > .about-desktop-dropdown {
      opacity: 1;
      pointer-events: auto;
    }
  }
</style>

<script>
  function toggleNav() {
    const menuBtn = document.querySelector(".hamburger-menu");
    const mobileNav = document.querySelector(".mobile-nav");
    const body = document.body;

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuBtn.classList.toggle("is-active");
      mobileNav?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );

      // Prevent body scroll when menu is open
      if (!menuExpanded) {
        body.style.overflow = "hidden";
      } else {
        body.style.overflow = "";
      }
    });
  }

  function setupAboutMenus() {
    // Mobile submenu toggle
    const aboutToggle = document.querySelector(
      ".about-toggle"
    ) as HTMLButtonElement | null;
    const mobileSubmenu = document.getElementById(
      "about-submenu-mobile"
    ) as HTMLUListElement | null;
    if (aboutToggle && !(aboutToggle as HTMLElement).dataset.initialized) {
      aboutToggle.addEventListener("click", () => {
        const expanded = aboutToggle.getAttribute("aria-expanded") === "true";
        aboutToggle.setAttribute("aria-expanded", expanded ? "false" : "true");
        if (mobileSubmenu) {
          const isOpen = !mobileSubmenu.classList.contains("hidden");
          if (isOpen) {
            // Collapse with height + padding/border/opacity animation
            mobileSubmenu.style.maxHeight = mobileSubmenu.scrollHeight + "px";
            // Force reflow so the browser acknowledges the starting max-height
            void mobileSubmenu.offsetHeight;
            mobileSubmenu.style.maxHeight = "0px";
            mobileSubmenu.style.padding = "0px";
            mobileSubmenu.style.borderWidth = "0px";
            mobileSubmenu.style.opacity = "0";
            mobileSubmenu.addEventListener("transitionend", function handler() {
              mobileSubmenu.classList.add("hidden");
              mobileSubmenu.classList.remove("flex");
              mobileSubmenu.removeEventListener(
                "transitionend",
                handler as any
              );
            });
          } else {
            // Expand with height animation
            mobileSubmenu.classList.remove("hidden");
            mobileSubmenu.classList.add("flex");
            mobileSubmenu.style.maxHeight = "0px";
            // Force reflow then set to target height for transition
            mobileSubmenu.style.padding = "0px";
            mobileSubmenu.style.borderWidth = "0px";
            mobileSubmenu.style.opacity = "0";
            void mobileSubmenu.offsetHeight;
            mobileSubmenu.style.maxHeight = mobileSubmenu.scrollHeight + "px";
            mobileSubmenu.style.padding = "12px"; // Tailwind p-3 ~ 12px
            mobileSubmenu.style.borderWidth = "1px";
            mobileSubmenu.style.opacity = "1";
          }
        }
        const chevron = aboutToggle.querySelector(
          ".about-chevron"
        ) as SVGElement | null;
        if (chevron) {
          chevron.classList.toggle("rotate-180");
        }
      });
      (aboutToggle as HTMLElement).dataset.initialized = "true";

      // If current page is within About section, ensure submenu starts expanded visually
      if (
        aboutToggle.getAttribute("aria-expanded") === "true" &&
        mobileSubmenu
      ) {
        mobileSubmenu.classList.remove("hidden");
        mobileSubmenu.classList.add("flex");
        mobileSubmenu.style.maxHeight = mobileSubmenu.scrollHeight + "px";
      }
    }

    // Desktop hover/focus interactions
    const desktopLink = document.querySelector(
      "a.about-desktop-link"
    ) as HTMLAnchorElement | null;
    const desktopDropdown = document.querySelector(
      ".about-desktop-dropdown"
    ) as HTMLDivElement | null;
    const desktopChevron = document.querySelector(
      ".about-desktop-chevron"
    ) as SVGElement | null;
    if (
      desktopLink &&
      desktopDropdown &&
      !desktopDropdown.getAttribute("data-initialized")
    ) {
      const show = () => {
        desktopDropdown.classList.remove("opacity-0", "pointer-events-none");
        desktopDropdown.classList.add("opacity-100");
        desktopChevron?.classList.add("rotate-180");
      };
      const hide = () => {
        desktopDropdown.classList.add("opacity-0", "pointer-events-none");
        desktopDropdown.classList.remove("opacity-100");
        desktopChevron?.classList.remove("rotate-180");
      };
      let hideTimeout: number | undefined;
      desktopLink.addEventListener("mouseenter", show);
      desktopLink.addEventListener("focus", show);
      desktopDropdown.addEventListener("mouseenter", () => {
        if (hideTimeout) clearTimeout(hideTimeout);
        show();
      });
      desktopDropdown.addEventListener("mouseleave", () => {
        hideTimeout = window.setTimeout(hide, 100);
      });
      desktopLink.addEventListener("mouseleave", () => {
        hideTimeout = window.setTimeout(hide, 100);
      });
      desktopLink.addEventListener("blur", () => {
        hideTimeout = window.setTimeout(hide, 100);
      });
      desktopDropdown.setAttribute("data-initialized", "true");
    }
  }

  toggleNav();
  setupAboutMenus();

  document.addEventListener("astro:after-swap", toggleNav);
  document.addEventListener("astro:after-swap", setupAboutMenus);
</script>

<style>
  /* Smooth open/close animation for mobile About submenu */
  #about-submenu-mobile {
    max-height: 0;
    transition:
      max-height 220ms ease,
      padding 200ms ease,
      border-width 200ms ease,
      opacity 200ms ease;
  }
</style>
